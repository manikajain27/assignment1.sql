Business Scenario:

Your company wants to manage a growing workforce, department budgets, employee performance reviews, and resource allocation to multiple projects. As a data engineer, you must design a schema and perform advanced queries to provide insights to the HR and finance teams.

1. Design the following tables:
	•	Department
	•	dept_id (INT, PK)
	•	dept_name (VARCHAR, UNIQUE)
	•	location (VARCHAR)
	•	budget (DECIMAL)
	•	Employee
	•	emp_id (INT, PK)
	•	emp_name (VARCHAR, NOT NULL)
	•	email (VARCHAR, UNIQUE)
	•	hire_date (DATE, DEFAULT CURRENT_DATE)
	•	salary (DECIMAL, CHECK salary >= 15000)
	•	dept_id (FK to Department)
	•	manager_id (INT, FK to Employee) — supports hierarchical structure
	•	Project
	•	proj_id (INT, PK)
	•	proj_name (VARCHAR, NOT NULL)
	•	start_date (DATE), end_date (DATE)
	•	status (ENUM: ‘Active’, ‘Completed’, ‘On Hold’)
	•	budget (DECIMAL)
	•	Employee_Project
	•	emp_id, proj_id (Composite PK, FKs)
	•	allocation_percentage (INT CHECK 0 < allocation_percentage <= 100)
	•	assigned_date (DATE)
	•	Performance_Review
	•	review_id (INT, PK)
	•	emp_id (FK)
	•	review_date (DATE)
	•	score (INT CHECK score BETWEEN 1 AND 5)
	•	reviewer_id (FK to Employee)

Constraints & Advanced Features
	•	Create a CHECK constraint on allocation_percentage so that a single employee’s total allocation across all active projects does not exceed 100%.
	•	Ensure referential integrity across all foreign keys.
	•	Enforce that no two employees in the same department have the same salary.

1.	List top 5 employees with the highest average performance score.
	2.	Find departments where average employee salary exceeds department budget / employee count.
	3.	List employees who have never received a performance review.
	4.	Display all employees and how many days they’ve been with the company.


	5.	List all employees with their department name, manager name, and count of projects they’re working on.
	6.	Show each department’s name and the project count where their employees are working.
	7.	Find employees who are working on all active projects.


	8.	Use UNION to list:
	•	Employees with salary > 1,00,000
	•	Employees with review scores of 5
(Avoid duplicates)
	9.	Find all projects that have no employees assigned.
	10.	Display average score for each employee and rank them using a window function.

	11.	Detect employees assigned to multiple projects where the total allocation exceeds 100%.
	12.	Identify departments with more than 3 employees whose performance score is < 3 in last 6 months.
